Observer/Observable pattern with delegates has some nice syntax
converting
if(DataReceived != null)
          DataReceived();
to 
DataReceived?.Invoke();
is both very readable and short and to the point

Update:
However being unable to call that directly from a subclass is kind of a bummer...
Using a new class as an argument and writing an overridable method.

Update:
Using generic syntax for EventHandler<> instead of using a delegate is nice
but abstracts the behavior more than you might want (or maybe not).

http://www.hanselman.com/blog/SelfcontainedNETCoreApplications.aspx

https://www.microsoft.com/net/targeting

Getting .NET Core 1.0 apps built and running is not simple...
Downloading some Core tools to see if that helps.
Installing updates and core tools left and right here...
^^^ That update was exactly what I was looking for.

Ok developing for .NET core is hard. Certain things are not supported specifcally
all the networking and threading things I'm currently trying to do.